{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst endpoint = 'http://localhost:8080/perfiles';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\nclass PerfilService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.perfilUpdatedSource = new Subject();\n    this.perfilUpdated$ = this.perfilUpdatedSource.asObservable();\n    this.perfilAddedSource = new Subject();\n    this.perfilAdded$ = this.perfilAddedSource.asObservable();\n  }\n  getPerfiles() {\n    return this.httpClient.get(endpoint);\n  }\n  add(perfil) {\n    let body = new URLSearchParams();\n    body.append(\"tipo\", perfil.tipo);\n    body.append(\"usuario\", perfil.usuario.toString());\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n      this.perfilAddedSource.next();\n    }));\n  }\n  updatePerfil(perfilId, updatedPerfil) {\n    const updateUrl = `${endpoint}/${perfilId}`;\n    let body = new URLSearchParams();\n    body.append(\"tipo\", updatedPerfil.tipo);\n    body.append(\"usuario\", updatedPerfil.usuario.toString());\n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n  notifyListUpdated() {\n    this.perfilUpdatedSource.next();\n  }\n  getPerfilById(perfilId) {\n    const direccionUrl = `${endpoint}/${perfilId}`;\n    return this.httpClient.get(direccionUrl);\n  }\n  deletePerfil(perfilId) {\n    const deleteUrl = `${endpoint}/${perfilId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n}\n_class = PerfilService;\n_class.ɵfac = function PerfilService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { PerfilService };","map":{"version":3,"names":["HttpHeaders","Subject","tap","endpoint","httpOptions","headers","PerfilService","constructor","httpClient","perfilUpdatedSource","perfilUpdated$","asObservable","perfilAddedSource","perfilAdded$","getPerfiles","get","add","perfil","body","URLSearchParams","append","tipo","usuario","toString","post","pipe","notifyListUpdated","next","updatePerfil","perfilId","updatedPerfil","updateUrl","put","getPerfilById","direccionUrl","deletePerfil","deleteUrl","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sombr\\Documents\\AED\\Proyecto\\frontend\\src\\app\\services\\perfil.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:8080/perfiles';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PerfilService {\n    private perfilUpdatedSource = new Subject<void>();\n    \n    perfilUpdated$ = this.perfilUpdatedSource.asObservable();  \n  constructor(private httpClient: HttpClient) { }\n\n  getPerfiles() {\n    return this.httpClient.get(endpoint);\n  }\n\n  private perfilAddedSource = new Subject<void>();\n  perfilAdded$ = this.perfilAddedSource.asObservable();\n\n  add(perfil: any) {\n    let body = new URLSearchParams();\n    body.append(\"tipo\", perfil.tipo);\n    body.append(\"usuario\", perfil.usuario.toString());\n\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n        this.perfilAddedSource.next(); \n      })\n    );\n  }\n\n  updatePerfil(perfilId: number, updatedPerfil: any): Observable<any> {\n    const updateUrl = `${endpoint}/${perfilId}`;\n    let body = new URLSearchParams();\n    body.append(\"tipo\", updatedPerfil.tipo);\n    body.append(\"usuario\", updatedPerfil.usuario.toString());\n  \n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }\n  \n  notifyListUpdated() {\n    this.perfilUpdatedSource.next();\n  }\n\n  getPerfilById(perfilId: number): Observable<any> {\n    const direccionUrl = `${endpoint}/${perfilId}`;\n    return this.httpClient.get(direccionUrl);\n  }\n\n  deletePerfil(perfilId: number): Observable<any> {\n    const deleteUrl = `${endpoint}/${perfilId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }  \n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,OAAO,QAAQ,MAAM;AAC1C,SAASC,GAAG,QAAQ,gBAAgB;;;AAEpC,MAAMC,QAAQ,GAAG,gCAAgC;AAEjD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIL,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAED,MAGaM,aAAa;EAIxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHpB,KAAAC,mBAAmB,GAAG,IAAIR,OAAO,EAAQ;IAEjD,KAAAS,cAAc,GAAG,IAAI,CAACD,mBAAmB,CAACE,YAAY,EAAE;IAOlD,KAAAC,iBAAiB,GAAG,IAAIX,OAAO,EAAQ;IAC/C,KAAAY,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACD,YAAY,EAAE;EAPN;EAE9CG,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAACZ,QAAQ,CAAC;EACtC;EAKAa,GAAGA,CAACC,MAAW;IACb,IAAIC,IAAI,GAAG,IAAIC,eAAe,EAAE;IAChCD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,MAAM,CAACI,IAAI,CAAC;IAChCH,IAAI,CAACE,MAAM,CAAC,SAAS,EAAEH,MAAM,CAACK,OAAO,CAACC,QAAQ,EAAE,CAAC;IAEjD,OAAO,IAAI,CAACf,UAAU,CAACgB,IAAI,CAACrB,QAAQ,EAAEe,IAAI,CAACK,QAAQ,EAAE,EAAEnB,WAAW,CAAC,CAACqB,IAAI,CACtEvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;MACxB,IAAI,CAACd,iBAAiB,CAACe,IAAI,EAAE;IAC/B,CAAC,CAAC,CACH;EACH;EAEAC,YAAYA,CAACC,QAAgB,EAAEC,aAAkB;IAC/C,MAAMC,SAAS,GAAG,GAAG5B,QAAQ,IAAI0B,QAAQ,EAAE;IAC3C,IAAIX,IAAI,GAAG,IAAIC,eAAe,EAAE;IAChCD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEU,aAAa,CAACT,IAAI,CAAC;IACvCH,IAAI,CAACE,MAAM,CAAC,SAAS,EAAEU,aAAa,CAACR,OAAO,CAACC,QAAQ,EAAE,CAAC;IAExD,OAAO,IAAI,CAACf,UAAU,CAACwB,GAAG,CAACD,SAAS,EAAEb,IAAI,CAACK,QAAQ,EAAE,EAAEnB,WAAW,CAAC,CAACqB,IAAI,CACtEvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;IAC1B,CAAC,CAAC,CACH;EACH;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACjB,mBAAmB,CAACkB,IAAI,EAAE;EACjC;EAEAM,aAAaA,CAACJ,QAAgB;IAC5B,MAAMK,YAAY,GAAG,GAAG/B,QAAQ,IAAI0B,QAAQ,EAAE;IAC9C,OAAO,IAAI,CAACrB,UAAU,CAACO,GAAG,CAACmB,YAAY,CAAC;EAC1C;EAEAC,YAAYA,CAACN,QAAgB;IAC3B,MAAMO,SAAS,GAAG,GAAGjC,QAAQ,IAAI0B,QAAQ,EAAE;IAC3C,OAAO,IAAI,CAACrB,UAAU,CAAC6B,MAAM,CAACD,SAAS,EAAEhC,WAAW,CAAC,CAACqB,IAAI,CACxDvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;IAC1B,CAAC,CAAC,CACH;EACH;;SAvDWpB,aAAa;;mBAAbA,MAAa,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbnC,MAAa;EAAAoC,OAAA,EAAbpC,MAAa,CAAAqC,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPtC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}