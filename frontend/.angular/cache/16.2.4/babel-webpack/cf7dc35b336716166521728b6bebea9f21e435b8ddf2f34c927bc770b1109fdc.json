{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst endpoint = 'http://localhost:8080/direcciones';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\nclass DireccionService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.direccionUpdatedSource = new Subject();\n    this.direccionUpdated$ = this.direccionUpdatedSource.asObservable();\n    this.direccionAddedSource = new Subject();\n    this.direccionAdded$ = this.direccionAddedSource.asObservable();\n  }\n  getDirecciones() {\n    return this.httpClient.get(endpoint);\n  }\n  add(direccion) {\n    let body = new URLSearchParams();\n    body.append(\"calle\", direccion.calle);\n    body.append(\"ciudad\", direccion.ciudad);\n    body.append(\"usuario\", direccion.usuario.toString());\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n      this.direccionAddedSource.next();\n    }));\n  }\n  updateDireccion(direccionId, updatedDireccion) {\n    const updateUrl = `${endpoint}/${direccionId}`;\n    let body = new URLSearchParams();\n    body.append(\"calle\", updatedDireccion.calle);\n    body.append(\"ciudad\", updatedDireccion.ciudad);\n    body.append(\"usuario\", updatedDireccion.usuario.toString());\n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n  notifyListUpdated() {\n    this.direccionUpdatedSource.next();\n  }\n  getDireccionById(direccionId) {\n    const direccionUrl = `${endpoint}/${direccionId}`;\n    return this.httpClient.get(direccionUrl);\n  }\n  deleteDireccion(direccionId) {\n    const deleteUrl = `${endpoint}/${direccionId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n}\n_class = DireccionService;\n_class.ɵfac = function DireccionService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { DireccionService };","map":{"version":3,"names":["HttpHeaders","Subject","tap","endpoint","httpOptions","headers","DireccionService","constructor","httpClient","direccionUpdatedSource","direccionUpdated$","asObservable","direccionAddedSource","direccionAdded$","getDirecciones","get","add","direccion","body","URLSearchParams","append","calle","ciudad","usuario","toString","post","pipe","notifyListUpdated","next","updateDireccion","direccionId","updatedDireccion","updateUrl","put","getDireccionById","direccionUrl","deleteDireccion","deleteUrl","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sombr\\Documents\\AED\\Proyecto\\frontend\\src\\app\\services\\direccion.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:8080/direcciones';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DireccionService {\n    private direccionUpdatedSource = new Subject<void>();\n    \n    direccionUpdated$ = this.direccionUpdatedSource.asObservable();  \n  constructor(private httpClient: HttpClient) { }\n\n  getDirecciones() {\n    return this.httpClient.get(endpoint);\n  }\n\n  private direccionAddedSource = new Subject<void>();\n  direccionAdded$ = this.direccionAddedSource.asObservable();\n\n  add(direccion: any) {\n    let body = new URLSearchParams();\n    body.append(\"calle\", direccion.calle);\n    body.append(\"ciudad\", direccion.ciudad);\n    body.append(\"usuario\", direccion.usuario.toString());\n\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n        this.direccionAddedSource.next(); \n      })\n    );\n  }\n\n  updateDireccion(direccionId: number, updatedDireccion: any): Observable<any> {\n    const updateUrl = `${endpoint}/${direccionId}`;\n    let body = new URLSearchParams();\n    body.append(\"calle\", updatedDireccion.calle);\n    body.append(\"ciudad\", updatedDireccion.ciudad);\n    body.append(\"usuario\", updatedDireccion.usuario.toString());\n  \n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }\n  \n  notifyListUpdated() {\n    this.direccionUpdatedSource.next();\n  }\n\n  getDireccionById(direccionId: number): Observable<any> {\n    const direccionUrl = `${endpoint}/${direccionId}`;\n    return this.httpClient.get(direccionUrl);\n  }\n\n  deleteDireccion(direccionId: number): Observable<any> {\n    const deleteUrl = `${endpoint}/${direccionId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}