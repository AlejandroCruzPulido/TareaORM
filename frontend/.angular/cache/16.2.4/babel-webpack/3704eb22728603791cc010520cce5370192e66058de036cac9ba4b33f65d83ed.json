{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst endpoint = 'http://localhost:8080/car';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\nclass CarService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.carUpdatedSource = new Subject();\n    this.carUpdated$ = this.carUpdatedSource.asObservable();\n    this.selectedCars = [];\n    this.carAddedSource = new Subject();\n    this.carAdded$ = this.carAddedSource.asObservable();\n  }\n  getCars() {\n    return this.httpClient.get(endpoint);\n  }\n  add(car) {\n    let body = new URLSearchParams();\n    body.append(\"marca\", car.marca);\n    body.append(\"modelo\", car.modelo);\n    body.append(\"precio\", car.precio.toString());\n    body.append(\"descripcion\", car.descripcion);\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyCarUpdated();\n      this.carAddedSource.next();\n    }));\n  }\n  getSelectedCars() {\n    return this.selectedCars;\n  }\n  updateCar(carId, updatedCar) {\n    const updateUrl = `${endpoint}/${carId}`;\n    let body = new URLSearchParams();\n    body.append(\"marca\", updatedCar.marca);\n    body.append(\"modelo\", updatedCar.modelo);\n    body.append(\"precio\", updatedCar.precio.toString());\n    body.append(\"descripcion\", updatedCar.descripcion);\n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyCarUpdated();\n    }));\n  }\n  notifyCarUpdated() {\n    this.carUpdatedSource.next();\n  }\n  getCarById(carId) {\n    const carUrl = `${endpoint}/${carId}`;\n    return this.httpClient.get(carUrl);\n  }\n  deleteCar(carId) {\n    const deleteUrl = `${endpoint}/${carId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(tap(() => {\n      this.notifyCarUpdated();\n    }));\n  }\n}\n_class = CarService;\n_class.ɵfac = function CarService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { CarService };","map":{"version":3,"names":["HttpHeaders","Subject","tap","endpoint","httpOptions","headers","CarService","constructor","httpClient","carUpdatedSource","carUpdated$","asObservable","selectedCars","carAddedSource","carAdded$","getCars","get","add","car","body","URLSearchParams","append","marca","modelo","precio","toString","descripcion","post","pipe","notifyCarUpdated","next","getSelectedCars","updateCar","carId","updatedCar","updateUrl","put","getCarById","carUrl","deleteCar","deleteUrl","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sombr\\Documents\\PGL\\Proyecto\\Cars-frontend\\src\\app\\services\\car.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:8080/car';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n    private carUpdatedSource = new Subject<void>();\n    \n    carUpdated$ = this.carUpdatedSource.asObservable();\n\n    private selectedCars: any[] = [];    \n  constructor(private httpClient: HttpClient) { }\n\n  getCars() {\n    return this.httpClient.get(endpoint);\n  }\n\n  private carAddedSource = new Subject<void>();\n  carAdded$ = this.carAddedSource.asObservable();\n\n  add(car: any) {\n    let body = new URLSearchParams();\n    body.append(\"marca\", car.marca);\n    body.append(\"modelo\", car.modelo);\n    body.append(\"precio\", car.precio.toString());\n    body.append(\"descripcion\", car.descripcion);\n\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyCarUpdated();\n        this.carAddedSource.next(); \n      })\n    );\n  }\n\n  getSelectedCars(): any[] {\n    return this.selectedCars;\n  }\n\n  updateCar(carId: number, updatedCar: any): Observable<any> {\n    const updateUrl = `${endpoint}/${carId}`;\n    let body = new URLSearchParams();\n    body.append(\"marca\", updatedCar.marca);\n    body.append(\"modelo\", updatedCar.modelo);\n    body.append(\"precio\", updatedCar.precio.toString());\n    body.append(\"descripcion\", updatedCar.descripcion);\n  \n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyCarUpdated();\n      })\n    );\n  }\n  \n  notifyCarUpdated() {\n    this.carUpdatedSource.next();\n  }\n\n  getCarById(carId: number): Observable<any> {\n    const carUrl = `${endpoint}/${carId}`;\n    return this.httpClient.get(carUrl);\n  }\n\n  deleteCar(carId: number): Observable<any> {\n    const deleteUrl = `${endpoint}/${carId}`;\n  \n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(\n      tap(() => {\n        this.notifyCarUpdated();\n      })\n    );\n  }  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}