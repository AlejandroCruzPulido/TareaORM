{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst endpoint = 'http://localhost:8080/usuarios';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\nclass UsuarioService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.usuarioUpdatedSource = new Subject();\n    this.usuarioUpdated$ = this.usuarioUpdatedSource.asObservable();\n    this.usuarioAddedSource = new Subject();\n    this.usuarioAdded$ = this.usuarioAddedSource.asObservable();\n  }\n  getUsuarios() {\n    return this.httpClient.get(endpoint);\n  }\n  add(usuario) {\n    let body = new URLSearchParams();\n    body.append(\"email\", usuario.email);\n    body.append(\"nombre\", usuario.nombre);\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n      this.usuarioAddedSource.next();\n    }));\n  }\n  updateUsuario(usuarioId, updatedUsuario) {\n    const updateUrl = `${endpoint}/${usuarioId}`;\n    let body = new URLSearchParams();\n    body.append(\"nombre\", updatedUsuario.nombre);\n    body.append(\"email\", updatedUsuario.email);\n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n  notifyListUpdated() {\n    this.usuarioUpdatedSource.next();\n  }\n  getUsuarioById(usuarioId) {\n    const carUrl = `${endpoint}/${usuarioId}`;\n    return this.httpClient.get(carUrl);\n  }\n  deleteUsuario(usuarioId) {\n    const deleteUrl = `${endpoint}/${usuarioId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(tap(() => {\n      this.notifyListUpdated();\n    }));\n  }\n}\n_class = UsuarioService;\n_class.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { UsuarioService };","map":{"version":3,"names":["HttpHeaders","Subject","tap","endpoint","httpOptions","headers","UsuarioService","constructor","httpClient","usuarioUpdatedSource","usuarioUpdated$","asObservable","usuarioAddedSource","usuarioAdded$","getUsuarios","get","add","usuario","body","URLSearchParams","append","email","nombre","post","toString","pipe","notifyListUpdated","next","updateUsuario","usuarioId","updatedUsuario","updateUrl","put","getUsuarioById","carUrl","deleteUsuario","deleteUrl","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sombr\\Documents\\AED\\Proyecto\\frontend\\src\\app\\services\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:8080/usuarios';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/x-www-form-urlencoded'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n    private usuarioUpdatedSource = new Subject<void>();\n    \n    usuarioUpdated$ = this.usuarioUpdatedSource.asObservable();  \n  constructor(private httpClient: HttpClient) { }\n\n  getUsuarios() {\n    return this.httpClient.get(endpoint);\n  }\n\n  private usuarioAddedSource = new Subject<void>();\n  usuarioAdded$ = this.usuarioAddedSource.asObservable();\n\n  add(usuario: any) {\n    let body = new URLSearchParams();\n    body.append(\"email\", usuario.email);\n    body.append(\"nombre\", usuario.nombre);\n\n    return this.httpClient.post(endpoint, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n        this.usuarioAddedSource.next(); \n      })\n    );\n  }\n\n  updateUsuario(usuarioId: number, updatedUsuario: any): Observable<any> {\n    const updateUrl = `${endpoint}/${usuarioId}`;\n    let body = new URLSearchParams();\n    body.append(\"nombre\", updatedUsuario.nombre);\n    body.append(\"email\", updatedUsuario.email);\n  \n    return this.httpClient.put(updateUrl, body.toString(), httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }\n  \n  notifyListUpdated() {\n    this.usuarioUpdatedSource.next();\n  }\n\n  getUsuarioById(usuarioId: number): Observable<any> {\n    const carUrl = `${endpoint}/${usuarioId}`;\n    return this.httpClient.get(carUrl);\n  }\n\n  deleteUsuario(usuarioId: number): Observable<any> {\n    const deleteUrl = `${endpoint}/${usuarioId}`;\n    return this.httpClient.delete(deleteUrl, httpOptions).pipe(\n      tap(() => {\n        this.notifyListUpdated();\n      })\n    );\n  }  \n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,OAAO,QAAQ,MAAM;AAC1C,SAASC,GAAG,QAAQ,gBAAgB;;;AAEpC,MAAMC,QAAQ,GAAG,gCAAgC;AAEjD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIL,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAED,MAGaM,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHpB,KAAAC,oBAAoB,GAAG,IAAIR,OAAO,EAAQ;IAElD,KAAAS,eAAe,GAAG,IAAI,CAACD,oBAAoB,CAACE,YAAY,EAAE;IAOpD,KAAAC,kBAAkB,GAAG,IAAIX,OAAO,EAAQ;IAChD,KAAAY,aAAa,GAAG,IAAI,CAACD,kBAAkB,CAACD,YAAY,EAAE;EAPR;EAE9CG,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAACZ,QAAQ,CAAC;EACtC;EAKAa,GAAGA,CAACC,OAAY;IACd,IAAIC,IAAI,GAAG,IAAIC,eAAe,EAAE;IAChCD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEH,OAAO,CAACI,KAAK,CAAC;IACnCH,IAAI,CAACE,MAAM,CAAC,QAAQ,EAAEH,OAAO,CAACK,MAAM,CAAC;IAErC,OAAO,IAAI,CAACd,UAAU,CAACe,IAAI,CAACpB,QAAQ,EAAEe,IAAI,CAACM,QAAQ,EAAE,EAAEpB,WAAW,CAAC,CAACqB,IAAI,CACtEvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;MACxB,IAAI,CAACd,kBAAkB,CAACe,IAAI,EAAE;IAChC,CAAC,CAAC,CACH;EACH;EAEAC,aAAaA,CAACC,SAAiB,EAAEC,cAAmB;IAClD,MAAMC,SAAS,GAAG,GAAG5B,QAAQ,IAAI0B,SAAS,EAAE;IAC5C,IAAIX,IAAI,GAAG,IAAIC,eAAe,EAAE;IAChCD,IAAI,CAACE,MAAM,CAAC,QAAQ,EAAEU,cAAc,CAACR,MAAM,CAAC;IAC5CJ,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEU,cAAc,CAACT,KAAK,CAAC;IAE1C,OAAO,IAAI,CAACb,UAAU,CAACwB,GAAG,CAACD,SAAS,EAAEb,IAAI,CAACM,QAAQ,EAAE,EAAEpB,WAAW,CAAC,CAACqB,IAAI,CACtEvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;IAC1B,CAAC,CAAC,CACH;EACH;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACjB,oBAAoB,CAACkB,IAAI,EAAE;EAClC;EAEAM,cAAcA,CAACJ,SAAiB;IAC9B,MAAMK,MAAM,GAAG,GAAG/B,QAAQ,IAAI0B,SAAS,EAAE;IACzC,OAAO,IAAI,CAACrB,UAAU,CAACO,GAAG,CAACmB,MAAM,CAAC;EACpC;EAEAC,aAAaA,CAACN,SAAiB;IAC7B,MAAMO,SAAS,GAAG,GAAGjC,QAAQ,IAAI0B,SAAS,EAAE;IAC5C,OAAO,IAAI,CAACrB,UAAU,CAAC6B,MAAM,CAACD,SAAS,EAAEhC,WAAW,CAAC,CAACqB,IAAI,CACxDvB,GAAG,CAAC,MAAK;MACP,IAAI,CAACwB,iBAAiB,EAAE;IAC1B,CAAC,CAAC,CACH;EACH;;SAvDWpB,cAAc;;mBAAdA,MAAc,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdnC,MAAc;EAAAoC,OAAA,EAAdpC,MAAc,CAAAqC,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPtC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}